# Define the learning rate
learning_rate = 0.001 
optimizer = Adam(learning_rate=learning_rate)

model = Sequential()
model.add(LSTM(25, input_shape=((length_series - 1), 1)
        ,return_sequences=True))
model.add(Dropout(rate=0.1))
model.add(LSTM(10))
model.add(Dropout(rate=0.2))
model.add(Dense(1, activation='sigmoid'))  # binary classification (Success or Failure)
model.compile(optimizer=optimizer, loss='binary_crossentropy', metrics=['accuracy'])

# Train the model
model.fit(X_train_scaled, y_train, epochs=100, batch_size=128, validation_split=0.15)